services:
    laravel.test:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - meilisearch
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
        volumes:
            - 'sail-meilisearch:/meili_data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://127.0.0.1:7700/health'
            retries: 3
            timeout: 5s
    frontend:
        build:
            context: '../frontend'    # ビルドコンテキスト（Dockerfileがある場所）
            dockerfile: Dockerfile    # 使用するDockerfileの名前
        container_name: 'handmade-frontend'  # コンテナに付ける名前
        image: 'sail-8.4/frontend'          # 作成されるイメージ名
        ports:
            - '3000:3000'            # ホスト:コンテナのポートマッピング
        environment:                 # コンテナ内の環境変数
            - NEXT_PUBLIC_API_URL=http://laravel.test  # LaravelのAPIエンドポイント
            - NODE_ENV=development   # Node.jsの実行環境
            - WATCHPACK_POLLING=true # ファイル変更の監視方法
        volumes:
            - '../frontend/src:/app/src'
            - '../frontend/public:/app/public'
            - '../frontend/package.json:/app/package.json'
            - '../frontend/package-lock.json:/app/package-lock.json'
            - '../frontend/next.config.mjs:/app/next.config.mjs'
            - '../frontend/postcss.config.mjs:/app/postcss.config.mjs'
            - '../frontend/jsconfig.json:/app/jsconfig.json'
            - '../frontend/eslint.config.mjs:/app/eslint.config.mjs'
            - '/app/node_modules'
            - '/app/.next'
        networks:
            - sail                   # Sailネットワークに参加
        depends_on:
            - laravel.test          # Laravelコンテナの起動を待つ
        stdin_open: true            # 標準入力を開く（デバッグ用）
        tty: true                   # 疑似TTYを割り当て

networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
